swagger: '2.0'
schemes:
  - http
host: appstream2.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: <fullname>Amazon AppStream 2.0</fullname> <p>API documentation for Amazon AppStream 2.0.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon AppStream
  version: '2016-12-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appstream-2016-12-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: appstream2
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/appstream2/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Associate a fleet to a stack.
      operationId: AssociateFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateFleetResult'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
  '/#CreateDirectoryConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a directory configuration with the given parameters.
      operationId: CreateDirectoryConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDirectoryConfigRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDirectoryConfigResult'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#CreateFleet':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new fleet.
      operationId: CreateFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFleetResult'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '485':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '486':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '487':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
  '/#CreateStack':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new stack.
      operationId: CreateStack
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateStackRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStackResult'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  '/#CreateStreamingURL':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a URL to start an AppStream 2.0 streaming session for a user. By default, the URL is valid only for 1 minute from the time that it is generated.'
      operationId: CreateStreamingURL
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamingURLRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingURLResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  '/#DeleteDirectoryConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the directory configuration with the given parameters.
      operationId: DeleteDirectoryConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDirectoryConfigRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDirectoryConfigResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DeleteFleet':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a fleet.
      operationId: DeleteFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFleetResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#DeleteStack':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the stack. After this operation completes, the environment can no longer be activated, and any reservations made for the stack are released.'
      operationId: DeleteStack
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteStackRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStackResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#DescribeDirectoryConfigs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns a list describing the specified directory configurations.
      operationId: DescribeDirectoryConfigs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDirectoryConfigsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDirectoryConfigsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeFleets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'If fleet names are provided, this operation describes the specified fleets; otherwise, all the fleets in the account are described.'
      operationId: DescribeFleets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      x-waiters:
        - acceptors:
            - argument: 'Fleets[].State'
              expected: ACTIVE
              matcher: pathAll
              state: success
            - argument: 'Fleets[].State'
              expected: PENDING_DEACTIVATE
              matcher: pathAny
              state: failure
            - argument: 'Fleets[].State'
              expected: INACTIVE
              matcher: pathAny
              state: failure
          delay: 30
          maxAttempts: 40
          operation: DescribeFleets
        - acceptors:
            - argument: 'Fleets[].State'
              expected: INACTIVE
              matcher: pathAll
              state: success
            - argument: 'Fleets[].State'
              expected: PENDING_ACTIVATE
              matcher: pathAny
              state: failure
            - argument: 'Fleets[].State'
              expected: ACTIVE
              matcher: pathAny
              state: failure
          delay: 30
          maxAttempts: 40
          operation: DescribeFleets
  '/#DescribeImages':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the images. If a list of names is not provided, all images in your account are returned. This operation does not return a paginated result.'
      operationId: DescribeImages
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeImagesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeImagesResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeSessions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the streaming sessions for a stack and a fleet. If a user ID is provided, this operation returns streaming sessions for only that user. To retrieve the next set of items, pass this value for the <code>nextToken</code> parameter in a subsequent call to this operation. If an authentication type is not provided, the operation defaults to users authenticated using a streaming URL.'
      operationId: DescribeSessions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSessionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSessionsResult'
        '480':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
  '/#DescribeStacks':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'If stack names are not provided, this operation describes the specified stacks; otherwise, all stacks in the account are described. To retrieve the next set of items, pass the <code>nextToken</code> value in a subsequent call to this operation.'
      operationId: DescribeStacks
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStacksRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStacksResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DisassociateFleet':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disassociates a fleet from a stack.
      operationId: DisassociateFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFleetResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#ExpireSession':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: This operation immediately stops a streaming session.
      operationId: ExpireSession
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExpireSessionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExpireSessionResult'
  '/#ListAssociatedFleets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all fleets associated with the stack.
      operationId: ListAssociatedFleets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociatedFleetsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociatedFleetsResult'
  '/#ListAssociatedStacks':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all stacks to which the specified fleet is associated.
      operationId: ListAssociatedStacks
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociatedStacksRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociatedStacksResult'
  '/#StartFleet':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Starts a fleet.
      operationId: StartFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartFleetResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#StopFleet':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Stops a fleet.
      operationId: StopFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopFleetResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#UpdateDirectoryConfig':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the directory configuration with the given parameters.
      operationId: UpdateDirectoryConfig
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDirectoryConfigRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDirectoryConfigResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#UpdateFleet':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Updates an existing fleet. All the attributes except the fleet name can be updated in the <b>STOPPED</b> state. When a fleet is in the <b>RUNNING</b> state, only <code>DisplayName</code> and <code>ComputeCapacity</code> can be updated. A fleet cannot be updated in a status of <b>STARTING</b> or <b>STOPPING</b>.'
      operationId: UpdateFleet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFleetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFleetResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '485':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '486':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '487':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '488':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
  '/#UpdateStack':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the specified fields in the stack with the specified name.
      operationId: UpdateStack
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStackRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStackResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
definitions:
  AccountName:
    format: password
    minLength: 1
    type: string
  AccountPassword:
    format: password
    maxLength: 127
    minLength: 1
    type: string
  Application:
    description: An entry for a single application in the application catalog.
    properties:
      DisplayName:
        $ref: '#/definitions/String'
        description: The name of the application shown to the end users.
      Enabled:
        $ref: '#/definitions/Boolean'
        description: 'If there is a problem, an application can be disabled after image creation.'
      IconURL:
        $ref: '#/definitions/String'
        description: The URL for the application icon. This URL may be time-limited.
      LaunchParameters:
        $ref: '#/definitions/String'
        description: A list of arguments that are passed to the application at launch.
      LaunchPath:
        $ref: '#/definitions/String'
        description: The path to the application executable in the instance.
      Metadata:
        $ref: '#/definitions/Metadata'
        description: Additional attributes that describe the application.
      Name:
        $ref: '#/definitions/String'
        description: The unique identifier for the application.
    type: object
  Applications:
    items:
      $ref: '#/definitions/Application'
    type: array
  Arn:
    pattern: '^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$'
    type: string
  AssociateFleetRequest:
    properties:
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet to associate.
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack to which the fleet is associated.
    required:
      - FleetName
      - StackName
    type: object
  AssociateFleetResult:
    properties: {}
    type: object
  AuthenticationType:
    enum:
      - API
      - SAML
      - USERPOOL
    type: string
  Boolean:
    type: boolean
  BooleanObject:
    type: boolean
  ComputeCapacity:
    description: The capacity configuration for the fleet.
    properties:
      DesiredInstances:
        $ref: '#/definitions/Integer'
        description: The desired number of streaming instances.
    required:
      - DesiredInstances
    type: object
  ComputeCapacityStatus:
    description: The capacity information for the fleet.
    properties:
      Available:
        $ref: '#/definitions/Integer'
        description: The number of currently available instances that can be used to stream sessions.
      Desired:
        $ref: '#/definitions/Integer'
        description: The desired number of streaming instances.
      InUse:
        $ref: '#/definitions/Integer'
        description: The number of instances that are being used for streaming.
      Running:
        $ref: '#/definitions/Integer'
        description: The total number of simultaneous streaming instances that are running.
    required:
      - Desired
    type: object
  ConcurrentModificationException:
    description: An API error occurred. Wait a few minutes and try again.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  CreateDirectoryConfigRequest:
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the directory, such as corp.example.com'
      OrganizationalUnitDistinguishedNames:
        $ref: '#/definitions/OrganizationalUnitDistinguishedNamesList'
        description: The list of the distinguished names of organizational units to place computer accounts in.
      ServiceAccountCredentials:
        $ref: '#/definitions/ServiceAccountCredentials'
        description: 'The <i>AccountName</i> and <i>AccountPassword</i> values for the service account, which are used by the streaming instance to connect to the directory.'
    required:
      - DirectoryName
      - OrganizationalUnitDistinguishedNames
      - ServiceAccountCredentials
    type: object
  CreateDirectoryConfigResult:
    properties:
      DirectoryConfig:
        $ref: '#/definitions/DirectoryConfig'
        description: Directory configuration details.
    type: object
  CreateFleetRequest:
    description: Contains the parameters for the new fleet to create.
    properties:
      ComputeCapacity:
        $ref: '#/definitions/ComputeCapacity'
        description: The parameters for the capacity allocated to the fleet.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the fleet.
      DisconnectTimeoutInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The time after disconnection when a session is considered to have ended. If a user who got disconnected reconnects within this timeout interval, the user is connected back to their previous session. The input can be any numeric value in seconds between 60 and 57600. '
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The display name of the fleet.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: 'The <i>DirectoryName</i> and <i>OrganizationalUnitDistinguishedName</i> values, which are used to join domains for the AppStream 2.0 streaming instances.'
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables default internet access for the fleet.
      ImageName:
        $ref: '#/definitions/String'
        description: Unique name of the image used by the fleet.
      InstanceType:
        $ref: '#/definitions/String'
        description: '<p>The instance type of compute resources for the fleet. Fleet instances are launched from this instance type. Available instance types are:</p> <ul> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> </ul>'
      MaxUserDurationInSeconds:
        $ref: '#/definitions/Integer'
        description: The maximum time for which a streaming session can run. The input can be any numeric value in seconds between 600 and 57600.
      Name:
        $ref: '#/definitions/Name'
        description: A unique identifier for the fleet.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the fleet.
    required:
      - Name
      - ImageName
      - InstanceType
      - ComputeCapacity
    type: object
  CreateFleetResult:
    properties:
      Fleet:
        $ref: '#/definitions/Fleet'
        description: The details for the created fleet.
    type: object
  CreateStackRequest:
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: The description displayed to end users on the AppStream 2.0 portal.
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The name displayed to end users on the AppStream 2.0 portal.
      Name:
        $ref: '#/definitions/String'
        description: The unique identifier for this stack.
      StorageConnectors:
        $ref: '#/definitions/StorageConnectorList'
        description: The storage connectors to be enabled for the stack.
    required:
      - Name
    type: object
  CreateStackResult:
    properties:
      Stack:
        $ref: '#/definitions/Stack'
        description: The details for the created stack.
    type: object
  CreateStreamingURLRequest:
    properties:
      ApplicationId:
        $ref: '#/definitions/String'
        description: The ID of the application that must be launched after the session starts.
      FleetName:
        $ref: '#/definitions/String'
        description: The fleet for which the URL is generated.
      SessionContext:
        $ref: '#/definitions/String'
        description: The sessionContext of the streaming URL.
      StackName:
        $ref: '#/definitions/String'
        description: The stack for which the URL is generated.
      UserId:
        $ref: '#/definitions/StreamingUrlUserId'
        description: A unique user ID for whom the URL is generated.
      Validity:
        $ref: '#/definitions/Long'
        description: The duration up to which the URL returned by this action is valid. The input can be any numeric value in seconds between 1 and 604800 seconds.
    required:
      - StackName
      - FleetName
      - UserId
    type: object
  CreateStreamingURLResult:
    properties:
      Expires:
        $ref: '#/definitions/Timestamp'
        description: 'Elapsed seconds after the Unix epoch, when this URL expires.'
      StreamingURL:
        $ref: '#/definitions/String'
        description: The URL to start the AppStream 2.0 streaming session.
    type: object
  DeleteDirectoryConfigRequest:
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: The name of the directory configuration to be deleted.
    required:
      - DirectoryName
    type: object
  DeleteDirectoryConfigResult:
    properties: {}
    type: object
  DeleteFleetRequest:
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet to be deleted.
    required:
      - Name
    type: object
  DeleteFleetResult:
    properties: {}
    type: object
  DeleteStackRequest:
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the stack to delete.
    required:
      - Name
    type: object
  DeleteStackResult:
    properties: {}
    type: object
  DescribeDirectoryConfigsRequest:
    properties:
      DirectoryNames:
        $ref: '#/definitions/DirectoryNameList'
        description: A specific list of directory names.
      MaxResults:
        $ref: '#/definitions/Integer'
        description: The size of each page of results.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The DescribeDirectoryConfigsResult.NextToken from a previous call to DescribeDirectoryConfigs. If this is the first call, pass null.'
    type: object
  DescribeDirectoryConfigsResult:
    properties:
      DirectoryConfigs:
        $ref: '#/definitions/DirectoryConfigList'
        description: The list of directory configurations.
      NextToken:
        $ref: '#/definitions/String'
        description: 'If not null, more results are available. To retrieve the next set of items, pass this value for the NextToken parameter in a subsequent call to DescribeDirectoryConfigs.'
    type: object
  DescribeFleetsRequest:
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The fleet names to describe. Use null to describe all the fleets for the AWS account.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    type: object
  DescribeFleetsResult:
    properties:
      Fleets:
        $ref: '#/definitions/FleetList'
        description: The list of fleet details.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    type: object
  DescribeImagesRequest:
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: A specific list of images to describe.
    type: object
  DescribeImagesResult:
    properties:
      Images:
        $ref: '#/definitions/ImageList'
        description: The list of images.
    type: object
  DescribeSessionsRequest:
    properties:
      AuthenticationType:
        $ref: '#/definitions/AuthenticationType'
        description: 'The authentication method of the user. It can be <code>API</code> for a user authenticated using a streaming URL, or <code>SAML</code> for a SAML federated user. If an authentication type is not provided, the operation defaults to users authenticated using a streaming URL.'
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet for which to list sessions.
      Limit:
        $ref: '#/definitions/Integer'
        description: The size of each page of results. The default value is 20 and the maximum supported value is 50.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack for which to list sessions.
      UserId:
        $ref: '#/definitions/UserId'
        description: The user for whom to list sessions. Use null to describe all the sessions for the stack and fleet.
    required:
      - StackName
      - FleetName
    type: object
  DescribeSessionsResult:
    properties:
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      Sessions:
        $ref: '#/definitions/SessionList'
        description: The list of streaming sessions.
    type: object
  DescribeStacksRequest:
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The stack names to describe. Use null to describe all the stacks for the AWS account.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    type: object
  DescribeStacksResult:
    properties:
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      Stacks:
        $ref: '#/definitions/StackList'
        description: The list of stack details.
    type: object
  Description:
    maxLength: 256
    type: string
  DirectoryConfig:
    description: 'Full directory configuration details, which are used to join domains for the AppStream 2.0 streaming instances.'
    properties:
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time stamp when the directory configuration was created within AppStream 2.0.
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the directory, such as corp.example.com'
      OrganizationalUnitDistinguishedNames:
        $ref: '#/definitions/OrganizationalUnitDistinguishedNamesList'
        description: The list of the distinguished names of organizational units in which to place computer accounts.
      ServiceAccountCredentials:
        $ref: '#/definitions/ServiceAccountCredentials'
        description: 'The <i>AccountName</i> and <i>AccountPassword</i> of the service account, to be used by the streaming instance to connect to the directory.'
    required:
      - DirectoryName
    type: object
  DirectoryConfigList:
    items:
      $ref: '#/definitions/DirectoryConfig'
    type: array
  DirectoryName:
    type: string
  DirectoryNameList:
    items:
      $ref: '#/definitions/DirectoryName'
    type: array
  DisassociateFleetRequest:
    properties:
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet to disassociate.
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack with which the fleet is associated.
    required:
      - FleetName
      - StackName
    type: object
  DisassociateFleetResult:
    properties: {}
    type: object
  DisplayName:
    maxLength: 100
    type: string
  DomainJoinInfo:
    description: 'The <i>DirectoryName</i> and <i>OrganizationalUnitDistinguishedName</i> values, which are used to join domains for the AppStream 2.0 streaming instances.'
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the directory, such as corp.example.com'
      OrganizationalUnitDistinguishedName:
        $ref: '#/definitions/OrganizationalUnitDistinguishedName'
        description: The distinguished name of the organizational unit to place the computer account in.
    type: object
  ErrorMessage:
    description: The error message in the exception.
    type: string
  ExpireSessionRequest:
    properties:
      SessionId:
        $ref: '#/definitions/String'
        description: The unique identifier of the streaming session to be stopped.
    required:
      - SessionId
    type: object
  ExpireSessionResult:
    properties: {}
    type: object
  Fleet:
    description: Contains the parameters for a fleet.
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN for the fleet.
      ComputeCapacityStatus:
        $ref: '#/definitions/ComputeCapacityStatus'
        description: The capacity information for the fleet.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the fleet was created.
      Description:
        $ref: '#/definitions/String'
        description: The description displayed to end users on the AppStream 2.0 portal.
      DisconnectTimeoutInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The time after disconnection when a session is considered to have ended. If a user who got disconnected reconnects within this timeout interval, the user is connected back to their previous session. The input can be any numeric value in seconds between 60 and 57600.'
      DisplayName:
        $ref: '#/definitions/String'
        description: The name displayed to end users on the AppStream 2.0 portal.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: 'The <i>DirectoryName</i> and <i>OrganizationalUnitDistinguishedName</i> values, which are used to join domains for the AppStream 2.0 streaming instances.'
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: 'Whether default internet access is enabled for the fleet. '
      FleetErrors:
        $ref: '#/definitions/FleetErrors'
        description: The list of fleet errors is appended to this list.
      ImageName:
        $ref: '#/definitions/String'
        description: The image used by the fleet.
      InstanceType:
        $ref: '#/definitions/String'
        description: 'The instance type of compute resources for the fleet. The fleet instances are launched from this instance type. '
      MaxUserDurationInSeconds:
        $ref: '#/definitions/Integer'
        description: The maximum time for which a streaming session can run. The value can be any numeric value in seconds between 600 and 57600.
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet.
      State:
        $ref: '#/definitions/FleetState'
        description: The current state for the fleet.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the fleet.
    required:
      - Arn
      - Name
      - ImageName
      - InstanceType
      - ComputeCapacityStatus
      - State
    type: object
  FleetAttribute:
    description: Fleet attribute.
    enum:
      - VPC_CONFIGURATION
      - VPC_CONFIGURATION_SECURITY_GROUP_IDS
      - DOMAIN_JOIN_INFO
    type: string
  FleetAttributes:
    description: A list of fleet attributes.
    items:
      $ref: '#/definitions/FleetAttribute'
    type: array
  FleetError:
    description: The details of the fleet error.
    properties:
      ErrorCode:
        $ref: '#/definitions/FleetErrorCode'
        description: The error code for the fleet error.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message generated when the fleet has errors.
    type: object
  FleetErrorCode:
    enum:
      - IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION
      - IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION
      - IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION
      - NETWORK_INTERFACE_LIMIT_EXCEEDED
      - INTERNAL_SERVICE_ERROR
      - IAM_SERVICE_ROLE_IS_MISSING
      - SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES
      - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION
      - SUBNET_NOT_FOUND
      - IMAGE_NOT_FOUND
      - INVALID_SUBNET_CONFIGURATION
      - SECURITY_GROUPS_NOT_FOUND
      - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION
      - DOMAIN_JOIN_ERROR_FILE_NOT_FOUND
      - DOMAIN_JOIN_ERROR_ACCESS_DENIED
      - DOMAIN_JOIN_ERROR_LOGON_FAILURE
      - DOMAIN_JOIN_ERROR_INVALID_PARAMETER
      - DOMAIN_JOIN_ERROR_MORE_DATA
      - DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN
      - DOMAIN_JOIN_ERROR_NOT_SUPPORTED
      - DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME
      - DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED
      - DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED
      - DOMAIN_JOIN_NERR_PASSWORD_EXPIRED
      - DOMAIN_JOIN_INTERNAL_SERVICE_ERROR
    type: string
  FleetErrors:
    items:
      $ref: '#/definitions/FleetError'
    type: array
  FleetList:
    description: A list of fleets.
    items:
      $ref: '#/definitions/Fleet'
    type: array
  FleetState:
    enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
    type: string
  Image:
    description: New streaming instances are booted from images. The image stores the application catalog and is connected to fleets.
    properties:
      Applications:
        $ref: '#/definitions/Applications'
        description: The applications associated with an image.
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN for the image.
      BaseImageArn:
        $ref: '#/definitions/Arn'
        description: The source image ARN from which this image was created.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time stamp when the image was created.
      Description:
        $ref: '#/definitions/String'
        description: A meaningful description for the image.
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name for the image.
      ImageBuilderSupported:
        $ref: '#/definitions/Boolean'
        description: Whether an image builder can be launched from this image.
      Name:
        $ref: '#/definitions/String'
        description: The unique identifier for the image.
      Platform:
        $ref: '#/definitions/PlatformType'
        description: The operating system platform of the image.
      PublicBaseImageReleasedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The AWS release date of the public base image. For private images, this date is the release date of the base image from which the image was created.'
      State:
        $ref: '#/definitions/ImageState'
        description: 'The image starts in the <b>PENDING</b> state. If image creation succeeds, it moves to <b>AVAILABLE</b>. If image creation fails, it moves to <b>FAILED</b>.'
      StateChangeReason:
        $ref: '#/definitions/ImageStateChangeReason'
        description: The reason why the last state change occurred.
      Visibility:
        $ref: '#/definitions/VisibilityType'
        description: The visibility of an image to the user; images can be public or private.
    required:
      - Name
    type: object
  ImageList:
    items:
      $ref: '#/definitions/Image'
    type: array
  ImageState:
    enum:
      - PENDING
      - AVAILABLE
      - FAILED
      - DELETING
    type: string
  ImageStateChangeReason:
    description: The reason why the last state change occurred.
    properties:
      Code:
        $ref: '#/definitions/ImageStateChangeReasonCode'
        description: The state change reason code of the image.
      Message:
        $ref: '#/definitions/String'
        description: The state change reason message to the end user.
    type: object
  ImageStateChangeReasonCode:
    enum:
      - INTERNAL_ERROR
      - IMAGE_BUILDER_NOT_AVAILABLE
    type: string
  IncompatibleImageException:
    description: The image does not support storage connectors.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  Integer:
    type: integer
  InvalidParameterCombinationException:
    description: 'Indicates an incorrect combination of parameters, or a missing parameter.'
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  InvalidRoleException:
    description: The specified role is invalid.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  LimitExceededException:
    description: The requested limit exceeds the permitted limit for an account.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  ListAssociatedFleetsRequest:
    properties:
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack whose associated fleets are listed.
    required:
      - StackName
    type: object
  ListAssociatedFleetsResult:
    description: The response from a successful operation.
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The names of associated fleets.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    type: object
  ListAssociatedStacksRequest:
    properties:
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet whose associated stacks are listed.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    required:
      - FleetName
    type: object
  ListAssociatedStacksResult:
    description: The response from a successful operation.
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The names of associated stacks.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    type: object
  Long:
    type: integer
  Metadata:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
      type: object
    type: array
  Name:
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$'
    type: string
  OperationNotPermittedException:
    description: The attempted operation is not permitted.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  OrganizationalUnitDistinguishedName:
    maxLength: 2000
    type: string
  OrganizationalUnitDistinguishedNamesList:
    items:
      $ref: '#/definitions/OrganizationalUnitDistinguishedName'
    type: array
  PlatformType:
    enum:
      - WINDOWS
    type: string
  ResourceAlreadyExistsException:
    description: The specified resource already exists.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  ResourceIdentifier:
    description: The ARN of the resource.
    minLength: 1
    type: string
  ResourceInUseException:
    description: The specified resource is in use.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  ResourceNotAvailableException:
    description: 'The specified resource exists and is not in use, but isn''t available.'
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  ResourceNotFoundException:
    description: The specified resource was not found.
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  SecurityGroupIdList:
    description: A list of security groups.
    items:
      $ref: '#/definitions/String'
    maxItems: 5
    type: array
  ServiceAccountCredentials:
    description: 'The <i>AccountName</i> and <i>AccountPassword</i> of the service account, to be used by the streaming instance to connect to the directory.'
    properties:
      AccountName:
        $ref: '#/definitions/AccountName'
        description: 'The user name of an account in the directory that is used by AppStream 2.0 streaming instances to connect to the directory. This account must have the following privileges: create computer objects, join computers to the domain, change/reset the password on descendant computer objects for the organizational units specified.'
      AccountPassword:
        $ref: '#/definitions/AccountPassword'
        description: The password for the user account for directory actions.
    required:
      - AccountName
      - AccountPassword
    type: object
  Session:
    description: Contains the parameters for a streaming session.
    properties:
      AuthenticationType:
        $ref: '#/definitions/AuthenticationType'
        description: The authentication method of the user for whom the session was created. It can be <code>API</code> for a user authenticated using a streaming URL or <code>SAML</code> for a SAML federated user.
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet for which the streaming session was created.
      Id:
        $ref: '#/definitions/String'
        description: The unique ID for a streaming session.
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack for which the streaming session was created.
      State:
        $ref: '#/definitions/SessionState'
        description: The current state of the streaming session.
      UserId:
        $ref: '#/definitions/UserId'
        description: The identifier of the user for whom the session was created.
    required:
      - Id
      - UserId
      - StackName
      - FleetName
      - State
    type: object
  SessionList:
    description: List of sessions.
    items:
      $ref: '#/definitions/Session'
    type: array
  SessionState:
    description: Possible values for the state of a streaming session.
    enum:
      - ACTIVE
      - PENDING
      - EXPIRED
    type: string
  Stack:
    description: Details about a stack.
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN of the stack.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time stamp when the stack was created.
      Description:
        $ref: '#/definitions/String'
        description: A meaningful description for the stack.
      DisplayName:
        $ref: '#/definitions/String'
        description: A display name for the stack.
      Name:
        $ref: '#/definitions/String'
        description: The unique identifier of the stack.
      StackErrors:
        $ref: '#/definitions/StackErrors'
        description: The list of errors associated with the stack.
      StorageConnectors:
        $ref: '#/definitions/StorageConnectorList'
        description: The storage connectors to be enabled for the stack.
    required:
      - Name
    type: object
  StackError:
    description: Contains the parameters for a stack error.
    properties:
      ErrorCode:
        $ref: '#/definitions/StackErrorCode'
        description: The error code of a stack error.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message of a stack error.
    type: object
  StackErrorCode:
    enum:
      - STORAGE_CONNECTOR_ERROR
      - INTERNAL_SERVICE_ERROR
    type: string
  StackErrors:
    description: A list of stack errors.
    items:
      $ref: '#/definitions/StackError'
    type: array
  StackList:
    description: A list of stacks.
    items:
      $ref: '#/definitions/Stack'
    type: array
  StartFleetRequest:
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet to start.
    required:
      - Name
    type: object
  StartFleetResult:
    properties: {}
    type: object
  StopFleetRequest:
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet to stop.
    required:
      - Name
    type: object
  StopFleetResult:
    properties: {}
    type: object
  StorageConnector:
    description: Contains the parameters for a storage connector.
    properties:
      ConnectorType:
        $ref: '#/definitions/StorageConnectorType'
        description: 'The type of storage connector. The possible values include: HOMEFOLDERS.'
      ResourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: The ARN associated with the storage connector.
    required:
      - ConnectorType
    type: object
  StorageConnectorList:
    description: A list of storage connectors.
    items:
      $ref: '#/definitions/StorageConnector'
    type: array
  StorageConnectorType:
    description: 'The type of storage connector. The possible values include: HOMEFOLDERS.'
    enum:
      - HOMEFOLDERS
    type: string
  StreamingUrlUserId:
    maxLength: 32
    minLength: 2
    pattern: '[\w+=,.@-]*'
    type: string
  String:
    minLength: 1
    type: string
  StringList:
    items:
      $ref: '#/definitions/String'
    type: array
  SubnetIdList:
    description: A list of subnet IDs.
    items:
      $ref: '#/definitions/String'
    type: array
  Timestamp:
    format: date-time
    type: string
  UpdateDirectoryConfigRequest:
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: The name of the existing directory configuration to be updated.
      OrganizationalUnitDistinguishedNames:
        $ref: '#/definitions/OrganizationalUnitDistinguishedNamesList'
        description: The list of the distinguished names of organizational units to place computer accounts in.
      ServiceAccountCredentials:
        $ref: '#/definitions/ServiceAccountCredentials'
        description: 'The <i>AccountName</i> and <i>AccountPassword</i> values for the service account, which are used by the streaming instance to connect to the directory'
    required:
      - DirectoryName
    type: object
  UpdateDirectoryConfigResult:
    properties:
      DirectoryConfig:
        $ref: '#/definitions/DirectoryConfig'
        description: The updated directory configuration details.
    type: object
  UpdateFleetRequest:
    properties:
      AttributesToDelete:
        $ref: '#/definitions/FleetAttributes'
        description: Fleet attributes to be deleted.
      ComputeCapacity:
        $ref: '#/definitions/ComputeCapacity'
        description: 'The parameters for the capacity allocated to the fleet. '
      DeleteVpcConfig:
        $ref: '#/definitions/Boolean'
        description: Delete the VPC association for the specified fleet.
      Description:
        $ref: '#/definitions/Description'
        description: The description displayed to end users on the AppStream 2.0 portal.
      DisconnectTimeoutInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The time after disconnection when a session is considered to have ended. If a user who got disconnected reconnects within this timeout interval, the user is connected back to their previous session. The input can be any numeric value in seconds between 60 and 57600.'
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The name displayed to end users on the AppStream 2.0 portal.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: 'The <i>DirectoryName</i> and <i>OrganizationalUnitDistinguishedName</i> values, which are used to join domains for the AppStream 2.0 streaming instances.'
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables default internet access for the fleet.
      ImageName:
        $ref: '#/definitions/String'
        description: The image name from which a fleet is created.
      InstanceType:
        $ref: '#/definitions/String'
        description: '<p>The instance type of compute resources for the fleet. Fleet instances are launched from this instance type. Available instance types are:</p> <ul> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> </ul>'
      MaxUserDurationInSeconds:
        $ref: '#/definitions/Integer'
        description: The maximum time for which a streaming session can run. The input can be any numeric value in seconds between 600 and 57600.
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the fleet.
    required:
      - Name
    type: object
  UpdateFleetResult:
    properties:
      Fleet:
        $ref: '#/definitions/Fleet'
        description: A list of fleet details.
    type: object
  UpdateStackRequest:
    properties:
      DeleteStorageConnectors:
        $ref: '#/definitions/Boolean'
        description: Remove all the storage connectors currently enabled for the stack.
      Description:
        $ref: '#/definitions/Description'
        description: The description displayed to end users on the AppStream 2.0 portal.
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The name displayed to end users on the AppStream 2.0 portal.
      Name:
        $ref: '#/definitions/String'
        description: The name of the stack to update.
      StorageConnectors:
        $ref: '#/definitions/StorageConnectorList'
        description: The storage connectors to be enabled for the stack.
    required:
      - Name
    type: object
  UpdateStackResult:
    properties:
      Stack:
        $ref: '#/definitions/Stack'
        description: A list of stack details.
    type: object
  UserId:
    maxLength: 32
    minLength: 2
    type: string
  VisibilityType:
    enum:
      - PUBLIC
      - PRIVATE
    type: string
  VpcConfig:
    description: VPC configuration information.
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIdList'
        description: Security groups associated with the fleet.
      SubnetIds:
        $ref: '#/definitions/SubnetIdList'
        description: The list of subnets to which a network interface is established from the fleet instance.
    type: object
