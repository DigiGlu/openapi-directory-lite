{
  "swagger": "2.0",
  "schemes": ["http"],
  "host": "demo.traccar.org",
  "basePath": "/api",
  "info": {
    "description": "Open Source GPS Tracking Platform",
    "title": "traccar",
    "version": "3.13",
    "x-apisguru-categories": ["location"],
    "x-logo": {"url": "https://pbs.twimg.com/profile_images/590395195268538368/oScd6DxA_400x400.png"},
    "x-origin": [{"format": "swagger", "url": "https://raw.githubusercontent.com/tananaev/traccar/master/swagger.json", "version": "2.0"}],
    "x-providerName": "traccar.org",
    "x-preferred": true
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {"basicAuth": {"description": "Basic HTTP authorization with _email_ and _password_", "type": "basic"}},
  "security": [{"basicAuth": []}],
  "parameters": {
    "Attribute": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Attribute"}},
    "AttributeAlias": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/AttributeAlias"}},
    "Calendar": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Calendar"}},
    "Device": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Device"}},
    "Driver": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Driver"}},
    "Geofence": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Geofence"}},
    "Group": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Group"}},
    "Permission": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Permission"}},
    "User": {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/User"}},
    "all": {"description": "Can only be used by admins or managers to fetch all entities", "in": "query", "name": "all", "type": "boolean"},
    "deviceId": {"description": "Standard users can use this only with _deviceId_s, they have access to", "in": "query", "name": "deviceId", "type": "integer"},
    "deviceIdArray": {"collectionFormat": "multi", "in": "query", "items": {"type": "integer"}, "name": "deviceId", "type": "array"},
    "entityId": {"in": "path", "name": "id", "required": true, "type": "integer"},
    "fromTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "in": "query", "name": "from", "required": true, "type": "string"},
    "groupId": {"description": "Standard users can use this only with _groupId_s, they have access to", "in": "query", "name": "groupId", "type": "integer"},
    "groupIdArray": {"collectionFormat": "multi", "in": "query", "items": {"type": "integer"}, "name": "groupId", "type": "array"},
    "refresh": {"in": "query", "name": "refresh", "required": false, "type": "boolean"},
    "toTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "in": "query", "name": "to", "required": true, "type": "string"},
    "userId": {"description": "Standard users can use this only with their own _userId_", "in": "query", "name": "userId", "type": "integer"}
  },
  "paths": {
    "/attributes/aliases": {
      "get": {
        "description": "Without params, it returns a list of AttributeAlias from all the user's Devices",
        "parameters": [{"$ref": "#/parameters/deviceId"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/AttributeAlias"}, "type": "array"}}},
        "summary": "Fetch a list of AttributeAlias"
      },
      "post": {"parameters": [{"$ref": "#/parameters/AttributeAlias"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/AttributeAlias"}}}, "summary": "Set an AttributeAlias"}
    },
    "/attributes/aliases/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete an AttributeAlias"},
      "put": {
        "parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/AttributeAlias"}],
        "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/AttributeAlias"}}},
        "summary": "Update an AttributeAlias"
      }
    },
    "/attributes/computed": {
      "get": {
        "description": "Without params, it returns a list of Attributes the user has access to",
        "parameters": [{"$ref": "#/parameters/all"}, {"$ref": "#/parameters/userId"}, {"$ref": "#/parameters/deviceId"}, {"$ref": "#/parameters/groupId"}, {"$ref": "#/parameters/refresh"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Attribute"}, "type": "array"}}},
        "summary": "Fetch a list of Attributes"
      },
      "post": {"parameters": [{"$ref": "#/parameters/Attribute"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Attribute"}}}, "summary": "Create an Attribute"}
    },
    "/attributes/computed/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete an Attribute"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/Attribute"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Attribute"}}}, "summary": "Update an Attribute"}
    },
    "/calendars": {
      "get": {
        "description": "Without params, it returns a list of Calendars the user has access to",
        "parameters": [{"$ref": "#/parameters/all"}, {"$ref": "#/parameters/userId"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Calendar"}, "type": "array"}}},
        "summary": "Fetch a list of Calendars"
      },
      "post": {"parameters": [{"$ref": "#/parameters/Calendar"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Calendar"}}}, "summary": "Create a Calendar"}
    },
    "/calendars/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete a Calendar"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/Calendar"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Calendar"}}}, "summary": "Update a Calendar"}
    },
    "/commands": {
      "post": {
        "parameters": [{"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Command"}}],
        "responses": {
          "200": {"description": "OK", "schema": {"$ref": "#/definitions/Command"}},
          "400": {"description": "Could happen when dispatching to a device that is offline, the user doesn't have permission or an incorrect command _type_ for the device"}
        },
        "summary": "Dispatch commands to device"
      }
    },
    "/commandtypes": {
      "get": {
        "parameters": [{"in": "query", "name": "deviceId", "required": true, "type": "integer"}],
        "responses": {
          "200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/CommandType"}, "type": "array"}},
          "400": {"description": "Could happen when trying to fetch from an offline device or the user does not have permission"}
        },
        "summary": "Fetch a list of available Commands for the Device"
      }
    },
    "/devices": {
      "get": {
        "description": "Without any params, returns a list of the user's devices",
        "parameters": [
          {"$ref": "#/parameters/all"},
          {"$ref": "#/parameters/userId"},
          {"collectionFormat": "multi", "description": "To fetch one or more devices. Multiple params can be passed like `id=31&id=42`", "in": "query", "name": "id", "required": false, "type": "integer"},
          {"collectionFormat": "multi", "description": "To fetch one or more devices. Multiple params can be passed like `uniqueId=333331&uniqieId=44442`", "in": "query", "name": "uniqueId", "required": false, "type": "string"}
        ],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Device"}, "type": "array"}}, "400": {"description": "No permission"}},
        "summary": "Fetch a list of Devices"
      },
      "post": {"parameters": [{"$ref": "#/parameters/Device"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Device"}}}, "summary": "Create a Device"}
    },
    "/devices/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete a Device"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/Device"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Device"}}}, "summary": "Update a Device"}
    },
    "/devices/{id}/distance": {
      "put": {
        "parameters": [{"$ref": "#/parameters/entityId"}, {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/DeviceTotalDistance"}}],
        "responses": {"204": {"description": "No Content"}},
        "summary": "Update the distance counter of the Device"
      }
    },
    "/drivers": {
      "get": {
        "description": "Without params, it returns a list of Drivers the user has access to",
        "parameters": [{"$ref": "#/parameters/all"}, {"$ref": "#/parameters/userId"}, {"$ref": "#/parameters/deviceId"}, {"$ref": "#/parameters/groupId"}, {"$ref": "#/parameters/refresh"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Driver"}, "type": "array"}}},
        "summary": "Fetch a list of Drivers"
      },
      "post": {"parameters": [{"$ref": "#/parameters/Driver"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Driver"}}}, "summary": "Create a Driver"}
    },
    "/drivers/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete a Driver"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/Driver"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Driver"}}}, "summary": "Update a Driver"}
    },
    "/events/{id}": {"get": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Event"}}}}},
    "/geofences": {
      "get": {
        "description": "Without params, it returns a list of Geofences the user has access to",
        "parameters": [{"$ref": "#/parameters/all"}, {"$ref": "#/parameters/userId"}, {"$ref": "#/parameters/deviceId"}, {"$ref": "#/parameters/groupId"}, {"$ref": "#/parameters/refresh"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Geofence"}, "type": "array"}}},
        "summary": "Fetch a list of Geofences"
      },
      "post": {"parameters": [{"$ref": "#/parameters/Geofence"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Geofence"}}}, "summary": "Create a Geofence"}
    },
    "/geofences/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete a Geofence"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/Geofence"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Geofence"}}}, "summary": "Update a Geofence"}
    },
    "/groups": {
      "get": {
        "description": "Without any params, returns a list of the Groups the user belongs to",
        "parameters": [{"$ref": "#/parameters/all"}, {"$ref": "#/parameters/userId"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Group"}, "type": "array"}}},
        "summary": "Fetch a list of Groups"
      },
      "post": {"parameters": [{"$ref": "#/parameters/Group"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Group"}}, "400": {"description": "No permission"}}, "summary": "Create a Group"}
    },
    "/groups/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete a Group"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/Group"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Group"}}}, "summary": "Update a Group"}
    },
    "/permissions": {
      "delete": {"parameters": [{"$ref": "#/parameters/Permission"}], "responses": {"204": {"description": "No Content"}}, "summary": "Unlink an Object from another Object"},
      "post": {
        "parameters": [{"$ref": "#/parameters/Permission"}],
        "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Permission"}}, "400": {"description": "No permission"}},
        "summary": "Link an Object to another Object"
      }
    },
    "/positions": {
      "get": {
        "consumes": ["application/json", "text/csv", "application/gpx+xml"],
        "description": "Without any params, it returns a list of last known positions for all the user's Devices. _from_ and _to_ fields are not required with _id_",
        "parameters": [
          {"description": "_deviceId_ is optional, but requires the _from_ and _to_ parameters when used", "in": "query", "name": "deviceId", "required": false, "type": "integer"},
          {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "in": "query", "name": "from", "required": false, "type": "string"},
          {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "in": "query", "name": "to", "required": false, "type": "string"},
          {"collectionFormat": "multi", "description": "To fetch one or more positions. Multiple params can be passed like `id=31&id=42`", "in": "query", "name": "id", "required": false, "type": "integer"}
        ],
        "produces": ["application/json", "text/csv", "application/gpx+xml"],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Position"}, "type": "array"}}},
        "summary": "Fetches a list of Positions"
      }
    },
    "/reports/events": {
      "get": {
        "consumes": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "parameters": [
          {"$ref": "#/parameters/deviceIdArray"},
          {"$ref": "#/parameters/groupIdArray"},
          {"description": "% can be used to return events of all types", "in": "query", "items": {"type": "string"}, "name": "type", "type": "array"},
          {"$ref": "#/parameters/fromTime"},
          {"$ref": "#/parameters/toTime"}
        ],
        "produces": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Event"}, "type": "array"}}},
        "summary": "Fetch a list of Events within the time period for the Devices or Groups"
      }
    },
    "/reports/route": {
      "get": {
        "consumes": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "parameters": [{"$ref": "#/parameters/deviceIdArray"}, {"$ref": "#/parameters/groupIdArray"}, {"$ref": "#/parameters/fromTime"}, {"$ref": "#/parameters/toTime"}],
        "produces": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Position"}, "type": "array"}}},
        "summary": "Fetch a list of Positions within the time period for the Devices or Groups"
      }
    },
    "/reports/summary": {
      "get": {
        "consumes": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "parameters": [{"$ref": "#/parameters/deviceIdArray"}, {"$ref": "#/parameters/groupIdArray"}, {"$ref": "#/parameters/fromTime"}, {"$ref": "#/parameters/toTime"}],
        "produces": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/ReportSummary"}, "type": "array"}}},
        "summary": "Fetch a list of ReportSummary within the time period for the Devices or Groups"
      }
    },
    "/reports/trips": {
      "get": {
        "consumes": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "parameters": [{"$ref": "#/parameters/deviceIdArray"}, {"$ref": "#/parameters/groupIdArray"}, {"$ref": "#/parameters/fromTime"}, {"$ref": "#/parameters/toTime"}],
        "produces": ["application/json", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/ReportTrips"}, "type": "array"}}},
        "summary": "Fetch a list of ReportTrips within the time period for the Devices or Groups"
      }
    },
    "/server": {
      "get": {"responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Server"}}}, "summary": "Fetch Server information"},
      "put": {
        "parameters": [{"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Server"}}],
        "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Server"}}},
        "summary": "Update Server information"
      }
    },
    "/session": {
      "delete": {"consumes": ["application/x-www-form-urlencoded"], "parameters": [], "responses": {"204": {"description": "No Content"}}, "summary": "Close the Session"},
      "get": {
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [{"in": "query", "name": "token", "required": false, "type": "string"}],
        "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/User"}}, "404": {"description": "Not Found"}},
        "summary": "Fetch Session information"
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [{"in": "formData", "name": "email", "required": true, "type": "string"}, {"format": "password", "in": "formData", "name": "password", "required": true, "type": "string"}],
        "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/User"}}, "401": {"description": "Unauthorized"}},
        "summary": "Create a new Session"
      }
    },
    "/statistics": {
      "get": {
        "parameters": [{"$ref": "#/parameters/fromTime"}, {"$ref": "#/parameters/toTime"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Statistics"}, "type": "array"}}},
        "summary": "Fetch server Statistics"
      }
    },
    "/users": {
      "get": {
        "parameters": [{"description": "Can only be used by admin or manager users", "in": "query", "name": "userId", "required": false, "type": "string"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/User"}, "type": "array"}}, "400": {"description": "No Permission"}},
        "summary": "Fetch a list of Users"
      },
      "post": {"parameters": [{"$ref": "#/parameters/User"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/User"}}}, "summary": "Create a User"}
    },
    "/users/notifications": {
      "get": {
        "description": "Without params, it returns a list of the user's enabled Notifications",
        "parameters": [{"description": "To fetch a list of all available Notifications", "in": "query", "name": "all", "type": "boolean"}, {"$ref": "#/parameters/userId"}],
        "responses": {"200": {"description": "OK", "schema": {"items": {"$ref": "#/definitions/Notification"}, "type": "array"}}},
        "summary": "Fetch a list of Notification types"
      },
      "post": {
        "parameters": [{"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/Notification"}}],
        "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Notification"}}},
        "summary": "Set or unset a Notification"
      }
    },
    "/users/{id}": {
      "delete": {"parameters": [{"$ref": "#/parameters/entityId"}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete a User"},
      "put": {"parameters": [{"$ref": "#/parameters/entityId"}, {"$ref": "#/parameters/User"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/User"}}}, "summary": "Update a User"}
    }
  },
  "definitions": {
    "Attribute": {"properties": {"attribute": {"type": "string"}, "description": {"type": "string"}, "expression": {"type": "string"}, "id": {"type": "integer"}, "type": {"description": "String|Number|Boolean", "type": "string"}}},
    "AttributeAlias": {"properties": {"alias": {"type": "string"}, "attribute": {"type": "string"}, "deviceId": {"type": "integer"}, "id": {"type": "integer"}}},
    "Calendar": {"properties": {"atributes": {}, "data": {"description": "base64 encoded in iCalendar format", "type": "string"}, "id": {"type": "integer"}, "name": {"type": "string"}}},
    "Command": {"properties": {"attributes": {}, "deviceId": {"type": "integer"}, "type": {"type": "string"}}},
    "CommandType": {"properties": {"type": {"type": "string"}}},
    "Device": {
      "properties": {
        "attributes": {},
        "category": {"type": "string"},
        "contact": {"type": "string"},
        "geofenceIds": {"items": {"type": "integer"}, "type": "array"},
        "groupId": {"type": "integer"},
        "id": {"type": "integer"},
        "lastUpdate": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "model": {"type": "string"},
        "name": {"type": "string"},
        "phone": {"type": "string"},
        "positionId": {"type": "integer"},
        "status": {"type": "string"},
        "uniqueId": {"type": "string"}
      }
    },
    "DeviceTotalDistance": {"properties": {"deviceId": {"type": "integer"}, "totalDistance": {"description": "in meters", "type": "number"}}},
    "Driver": {"properties": {"atributes": {}, "id": {"type": "integer"}, "name": {"type": "string"}, "uniqueId": {"type": "string"}}},
    "Event": {
      "properties": {
        "attributes": {},
        "deviceId": {"type": "integer"},
        "geofenceId": {"type": "integer"},
        "id": {"type": "integer"},
        "positionId": {"type": "integer"},
        "serverTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "type": {"type": "string"}
      }
    },
    "Geofence": {"properties": {"area": {"type": "string"}, "attributes": {}, "calendarId": {"type": "integer"}, "description": {"type": "string"}, "id": {"type": "integer"}, "name": {"type": "string"}}},
    "Group": {"properties": {"attributes": {}, "groupId": {"type": "integer"}, "id": {"type": "integer"}, "name": {"type": "string"}}},
    "Notification": {"properties": {"attributes": {}, "id": {"type": "integer"}, "mail": {"type": "boolean"}, "type": {"type": "string"}, "userId": {"type": "integer"}, "web": {"type": "boolean"}}},
    "Permission": {
      "description": "This is a permission map that contain two object indexes. It is used to link/unlink objects. Order is important. Example: { deviceId:8, geofenceId: 16 }",
      "properties": {
        "attributeId": {"description": "Computed Attribute Id, can be second parameter only", "type": "integer"},
        "calendarId": {"description": "Geofence Id, can be second parameter only and only in combination with userId", "type": "integer"},
        "deviceId": {"description": "Device Id, can be first parameter or second only in combination with userId", "type": "integer"},
        "driverId": {"description": "Driver Id, can be second parameter only", "type": "integer"},
        "geofenceId": {"description": "Geofence Id, can be second parameter only", "type": "integer"},
        "groupId": {"description": "Group Id, can be first parameter or second only in combination with userId", "type": "integer"},
        "managedUserId": {"description": "User Id, can be second parameter only and only in combination with userId", "type": "integer"},
        "userId": {"description": "User Id, can be only first parameter", "type": "integer"}
      }
    },
    "Position": {
      "properties": {
        "accuracy": {"type": "number"},
        "address": {"type": "string"},
        "altitude": {"type": "number"},
        "attributes": {},
        "course": {"type": "number"},
        "deviceId": {"type": "integer"},
        "deviceTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "fixTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "id": {"type": "integer"},
        "latitude": {"type": "number"},
        "longitude": {"type": "number"},
        "network": {"type": "string"},
        "outdated": {"type": "boolean"},
        "protocol": {"type": "string"},
        "serverTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "speed": {"description": "in knots", "type": "number"},
        "valid": {"type": "boolean"}
      }
    },
    "ReportStops": {
      "properties": {
        "address": {"type": "string"},
        "deviceId": {"type": "integer"},
        "deviceName": {"type": "string"},
        "duration": {"type": "integer"},
        "endTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "engineHours": {"type": "integer"},
        "lat": {"type": "number"},
        "lon": {"type": "number"},
        "spentFuel": {"description": "in liters", "type": "number"},
        "startTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"}
      }
    },
    "ReportSummary": {
      "properties": {
        "averageSpeed": {"description": "in knots", "type": "number"},
        "deviceId": {"type": "integer"},
        "deviceName": {"type": "string"},
        "distance": {"description": "in meters", "type": "number"},
        "engineHours": {"type": "integer"},
        "maxSpeed": {"description": "in knots", "type": "number"},
        "spentFuel": {"description": "in liters", "type": "number"}
      }
    },
    "ReportTrips": {
      "properties": {
        "averageSpeed": {"description": "in knots", "type": "number"},
        "deviceId": {"type": "integer"},
        "deviceName": {"type": "string"},
        "distance": {"description": "in meters", "type": "number"},
        "driverName": {"type": "string"},
        "driverUniqueId": {"type": "integer"},
        "duration": {"type": "integer"},
        "endAddress": {"type": "string"},
        "endLat": {"type": "number"},
        "endLon": {"type": "number"},
        "endTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "maxSpeed": {"description": "in knots", "type": "number"},
        "spentFuel": {"description": "in liters", "type": "number"},
        "startAddress": {"type": "string"},
        "startLat": {"type": "number"},
        "startLon": {"type": "number"},
        "startTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"}
      }
    },
    "Server": {
      "properties": {
        "attributes": {},
        "bingKey": {"type": "string"},
        "coordinateFormat": {"type": "string"},
        "distanceUnit": {"type": "string"},
        "forceSettings": {"type": "boolean"},
        "id": {"type": "integer"},
        "latitude": {"type": "number"},
        "longitude": {"type": "number"},
        "map": {"type": "string"},
        "mapUrl": {"type": "string"},
        "readonly": {"type": "boolean"},
        "registration": {"type": "boolean"},
        "speedUnit": {"type": "string"},
        "twelveHourFormat": {"type": "boolean"},
        "version": {"type": "string"},
        "zoom": {"type": "integer"}
      }
    },
    "Statistics": {
      "properties": {
        "activeDevices": {"type": "integer"},
        "activeUsers": {"type": "integer"},
        "captureTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "messagesReceived": {"type": "integer"},
        "messagesStored": {"type": "integer"},
        "requests": {"type": "integer"}
      }
    },
    "User": {
      "properties": {
        "admin": {"type": "boolean"},
        "attributes": {},
        "coordinateFormat": {"type": "string"},
        "deviceLimit": {"type": "integer"},
        "deviceReadonly": {"type": "boolean"},
        "disabled": {"type": "boolean"},
        "distanceUnit": {"type": "string"},
        "email": {"type": "string"},
        "expirationTime": {"description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`", "format": "date-time", "type": "string"},
        "id": {"type": "integer"},
        "latitude": {"type": "number"},
        "longitude": {"type": "number"},
        "map": {"type": "string"},
        "name": {"type": "string"},
        "password": {"type": "string"},
        "readonly": {"type": "boolean"},
        "speedUnit": {"type": "string"},
        "token": {"type": "string"},
        "twelveHourFormat": {"type": "boolean"},
        "userLimit": {"type": "integer"},
        "zoom": {"type": "integer"}
      }
    }
  }
}
