{
  "swagger": "2.0",
  "schemes": ["https"],
  "host": "sourcerepo.googleapis.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {"name": "Google", "url": "https://google.com"},
    "description": "Access source code repositories hosted by Google.",
    "license": {"name": "Creative Commons Attribution 3.0", "url": "http://creativecommons.org/licenses/by/3.0/"},
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Cloud Source Repositories",
    "version": "v1",
    "x-apiClientRegistration": {"url": "https://console.developers.google.com"},
    "x-logo": {"url": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"},
    "x-origin": [{"converter": {"url": "https://github.com/lucybot/api-spec-converter", "version": "2.0.1"}, "format": "google", "url": "https://sourcerepo.googleapis.com/$discovery/rest?version=v1", "version": "v1"}],
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "sourcerepo"
  },
  "externalDocs": {"url": "https://cloud.google.com/source-repositories/docs/apis"},
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 implicit authentication",
      "flow": "implicit",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/source.read_only": "View the contents of your source code repositories",
        "https://www.googleapis.com/auth/source.read_write": "Manage the contents of your source code repositories"
      },
      "type": "oauth2"
    },
    "Oauth2c": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 accessCode authentication",
      "flow": "accessCode",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/source.read_only": "View the contents of your source code repositories",
        "https://www.googleapis.com/auth/source.read_write": "Manage the contents of your source code repositories"
      },
      "tokenUrl": "https://accounts.google.com/o/oauth2/token",
      "type": "oauth2"
    }
  },
  "parameters": {
    "$.xgafv": {"description": "V1 error format.", "enum": ["1", "2"], "in": "query", "name": "$.xgafv", "type": "string"},
    "access_token": {"description": "OAuth access token.", "in": "query", "name": "access_token", "type": "string"},
    "alt": {"default": "json", "description": "Data format for response.", "enum": ["json", "media", "proto"], "in": "query", "name": "alt", "type": "string"},
    "bearer_token": {"description": "OAuth bearer token.", "in": "query", "name": "bearer_token", "type": "string"},
    "callback": {"description": "JSONP", "in": "query", "name": "callback", "type": "string"},
    "fields": {"description": "Selector specifying which fields to include in a partial response.", "in": "query", "name": "fields", "type": "string"},
    "key": {"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "in": "query", "name": "key", "type": "string"},
    "oauth_token": {"description": "OAuth 2.0 token for the current user.", "in": "query", "name": "oauth_token", "type": "string"},
    "pp": {"default": true, "description": "Pretty-print response.", "in": "query", "name": "pp", "type": "boolean"},
    "prettyPrint": {"default": true, "description": "Returns response with indentations and line breaks.", "in": "query", "name": "prettyPrint", "type": "boolean"},
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "in": "query",
      "name": "quotaUser",
      "type": "string"
    },
    "uploadType": {"description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "in": "query", "name": "uploadType", "type": "string"},
    "upload_protocol": {"description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "in": "query", "name": "upload_protocol", "type": "string"}
  },
  "tags": [{"name": "projects"}],
  "paths": {
    "/v1/{name}": {
      "delete": {
        "description": "Deletes a repo.",
        "operationId": "sourcerepo.projects.repos.delete",
        "parameters": [{"description": "The name of the repo to delete. Values are of the form\n`projects/<project>/repos/<repo>`.", "in": "path", "name": "name", "required": true, "type": "string", "x-reservedExpansion": true}],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/Empty"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      },
      "get": {
        "description": "Returns information about a repo.",
        "operationId": "sourcerepo.projects.repos.get",
        "parameters": [{"description": "The name of the requested repository. Values are of the form\n`projects/<project>/repos/<repo>`.", "in": "path", "name": "name", "required": true, "type": "string", "x-reservedExpansion": true}],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/Repo"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      },
      "parameters": [
        {"$ref": "#/parameters/fields"},
        {"$ref": "#/parameters/uploadType"},
        {"$ref": "#/parameters/callback"},
        {"$ref": "#/parameters/$.xgafv"},
        {"$ref": "#/parameters/alt"},
        {"$ref": "#/parameters/key"},
        {"$ref": "#/parameters/access_token"},
        {"$ref": "#/parameters/quotaUser"},
        {"$ref": "#/parameters/pp"},
        {"$ref": "#/parameters/bearer_token"},
        {"$ref": "#/parameters/oauth_token"},
        {"$ref": "#/parameters/upload_protocol"},
        {"$ref": "#/parameters/prettyPrint"}
      ]
    },
    "/v1/{name}/repos": {
      "get": {
        "description": "Returns all repos belonging to a project. The sizes of the repos are\nnot set by ListRepos.  To get the size of a repo, use GetRepo.",
        "operationId": "sourcerepo.projects.repos.list",
        "parameters": [
          {"description": "The project ID whose repos should be listed. Values are of the form\n`projects/<project>`.", "in": "path", "name": "name", "required": true, "type": "string", "x-reservedExpansion": true},
          {"description": "Maximum number of repositories to return; between 1 and 500.\nIf not set or zero, defaults to 100 at the server.", "in": "query", "name": "pageSize", "type": "integer"},
          {
            "description": "Resume listing repositories where a prior ListReposResponse\nleft off. This is an opaque token that must be obtained from\na recent, prior ListReposResponse's next_page_token field.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/ListReposResponse"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      },
      "parameters": [
        {"$ref": "#/parameters/fields"},
        {"$ref": "#/parameters/uploadType"},
        {"$ref": "#/parameters/callback"},
        {"$ref": "#/parameters/$.xgafv"},
        {"$ref": "#/parameters/alt"},
        {"$ref": "#/parameters/key"},
        {"$ref": "#/parameters/access_token"},
        {"$ref": "#/parameters/quotaUser"},
        {"$ref": "#/parameters/pp"},
        {"$ref": "#/parameters/bearer_token"},
        {"$ref": "#/parameters/oauth_token"},
        {"$ref": "#/parameters/upload_protocol"},
        {"$ref": "#/parameters/prettyPrint"}
      ]
    },
    "/v1/{parent}/repos": {
      "parameters": [
        {"$ref": "#/parameters/fields"},
        {"$ref": "#/parameters/uploadType"},
        {"$ref": "#/parameters/callback"},
        {"$ref": "#/parameters/$.xgafv"},
        {"$ref": "#/parameters/alt"},
        {"$ref": "#/parameters/key"},
        {"$ref": "#/parameters/access_token"},
        {"$ref": "#/parameters/quotaUser"},
        {"$ref": "#/parameters/pp"},
        {"$ref": "#/parameters/bearer_token"},
        {"$ref": "#/parameters/oauth_token"},
        {"$ref": "#/parameters/upload_protocol"},
        {"$ref": "#/parameters/prettyPrint"}
      ],
      "post": {
        "description": "Creates a repo in the given project with the given name.\n\nIf the named repository already exists, `CreateRepo` returns\n`ALREADY_EXISTS`.",
        "operationId": "sourcerepo.projects.repos.create",
        "parameters": [
          {"description": "The project in which to create the repo. Values are of the form\n`projects/<project>`.", "in": "path", "name": "parent", "required": true, "type": "string", "x-reservedExpansion": true},
          {"in": "body", "name": "body", "schema": {"$ref": "#/definitions/Repo"}}
        ],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/Repo"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      }
    },
    "/v1/{resource}:getIamPolicy": {
      "get": {
        "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
        "operationId": "sourcerepo.projects.repos.getIamPolicy",
        "parameters": [
          {
            "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
            "in": "path",
            "name": "resource",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/Policy"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      },
      "parameters": [
        {"$ref": "#/parameters/fields"},
        {"$ref": "#/parameters/uploadType"},
        {"$ref": "#/parameters/callback"},
        {"$ref": "#/parameters/$.xgafv"},
        {"$ref": "#/parameters/alt"},
        {"$ref": "#/parameters/key"},
        {"$ref": "#/parameters/access_token"},
        {"$ref": "#/parameters/quotaUser"},
        {"$ref": "#/parameters/pp"},
        {"$ref": "#/parameters/bearer_token"},
        {"$ref": "#/parameters/oauth_token"},
        {"$ref": "#/parameters/upload_protocol"},
        {"$ref": "#/parameters/prettyPrint"}
      ]
    },
    "/v1/{resource}:setIamPolicy": {
      "parameters": [
        {"$ref": "#/parameters/fields"},
        {"$ref": "#/parameters/uploadType"},
        {"$ref": "#/parameters/callback"},
        {"$ref": "#/parameters/$.xgafv"},
        {"$ref": "#/parameters/alt"},
        {"$ref": "#/parameters/key"},
        {"$ref": "#/parameters/access_token"},
        {"$ref": "#/parameters/quotaUser"},
        {"$ref": "#/parameters/pp"},
        {"$ref": "#/parameters/bearer_token"},
        {"$ref": "#/parameters/oauth_token"},
        {"$ref": "#/parameters/upload_protocol"},
        {"$ref": "#/parameters/prettyPrint"}
      ],
      "post": {
        "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
        "operationId": "sourcerepo.projects.repos.setIamPolicy",
        "parameters": [
          {
            "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
            "in": "path",
            "name": "resource",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          },
          {"in": "body", "name": "body", "schema": {"$ref": "#/definitions/SetIamPolicyRequest"}}
        ],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/Policy"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      }
    },
    "/v1/{resource}:testIamPermissions": {
      "parameters": [
        {"$ref": "#/parameters/fields"},
        {"$ref": "#/parameters/uploadType"},
        {"$ref": "#/parameters/callback"},
        {"$ref": "#/parameters/$.xgafv"},
        {"$ref": "#/parameters/alt"},
        {"$ref": "#/parameters/key"},
        {"$ref": "#/parameters/access_token"},
        {"$ref": "#/parameters/quotaUser"},
        {"$ref": "#/parameters/pp"},
        {"$ref": "#/parameters/bearer_token"},
        {"$ref": "#/parameters/oauth_token"},
        {"$ref": "#/parameters/upload_protocol"},
        {"$ref": "#/parameters/prettyPrint"}
      ],
      "post": {
        "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.",
        "operationId": "sourcerepo.projects.repos.testIamPermissions",
        "parameters": [
          {
            "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
            "in": "path",
            "name": "resource",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          },
          {"in": "body", "name": "body", "schema": {"$ref": "#/definitions/TestIamPermissionsRequest"}}
        ],
        "responses": {"200": {"description": "Successful response", "schema": {"$ref": "#/definitions/TestIamPermissionsResponse"}}},
        "security": [
          {"Oauth2": ["https://www.googleapis.com/auth/cloud-platform"], "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_only"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_only"]},
          {"Oauth2": ["https://www.googleapis.com/auth/source.read_write"], "Oauth2c": ["https://www.googleapis.com/auth/source.read_write"]}
        ],
        "tags": ["projects"]
      }
    }
  },
  "definitions": {
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {"description": "The configuration for logging of each type of permission.\nNext ID: 4", "items": {"$ref": "#/definitions/AuditLogConfig"}, "type": "array"},
        "exemptedMembers": {"items": {"type": "string"}, "type": "array"},
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "properties": {
        "exemptedMembers": {"description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.", "items": {"type": "string"}, "type": "array"},
        "logType": {"description": "The log type that this config enables.", "enum": ["LOG_TYPE_UNSPECIFIED", "ADMIN_READ", "DATA_WRITE", "DATA_READ"], "type": "string"}
      },
      "type": "object"
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "properties": {
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "items": {"type": "string"},
          "type": "array"
        },
        "role": {"description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.\nRequired", "type": "string"}
      },
      "type": "object"
    },
    "CloudAuditOptions": {
      "description": "Write a Cloud Audit log",
      "properties": {"logName": {"description": "The log_name to populate in the Cloud Audit Record.", "enum": ["UNSPECIFIED_LOG_NAME", "ADMIN_ACTIVITY", "DATA_ACCESS"], "type": "string"}},
      "type": "object"
    },
    "Condition": {
      "description": "A condition to be met.",
      "properties": {
        "iam": {"description": "Trusted attributes supplied by the IAM system.", "enum": ["NO_ATTR", "AUTHORITY", "ATTRIBUTION", "APPROVER", "JUSTIFICATION_TYPE"], "type": "string"},
        "op": {"description": "An operator to apply the subject with.", "enum": ["NO_OP", "EQUALS", "NOT_EQUALS", "IN", "NOT_IN", "DISCHARGED"], "type": "string"},
        "svc": {"description": "Trusted attributes discharged by the service.", "type": "string"},
        "sys": {"description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.", "enum": ["NO_ATTR", "REGION", "SERVICE", "NAME", "IP"], "type": "string"},
        "value": {"description": "DEPRECATED. Use 'values' instead.", "type": "string"},
        "values": {"description": "The objects of the condition. This is mutually exclusive with 'value'.", "items": {"type": "string"}, "type": "array"}
      },
      "type": "object"
    },
    "CounterOptions": {
      "description": "Options for counters",
      "properties": {"field": {"description": "The field value to attribute.", "type": "string"}, "metric": {"description": "The metric to update.", "type": "string"}},
      "type": "object"
    },
    "DataAccessOptions": {"description": "Write a Data Access (Gin) log", "properties": {}, "type": "object"},
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "ListReposResponse": {
      "description": "Response for ListRepos.  The size is not set in the returned repositories.",
      "properties": {
        "nextPageToken": {"description": "If non-empty, additional repositories exist within the project. These\ncan be retrieved by including this value in the next ListReposRequest's\npage_token field.", "type": "string"},
        "repos": {"description": "The listed repos.", "items": {"$ref": "#/definitions/Repo"}, "type": "array"}
      },
      "type": "object"
    },
    "LogConfig": {
      "description": "Specifies what kind of log the caller must write",
      "properties": {
        "cloudAudit": {"$ref": "#/definitions/CloudAuditOptions", "description": "Cloud audit options."},
        "counter": {"$ref": "#/definitions/CounterOptions", "description": "Counter options."},
        "dataAccess": {"$ref": "#/definitions/DataAccessOptions", "description": "Data access options."}
      },
      "type": "object"
    },
    "MirrorConfig": {
      "description": "Configuration to automatically mirror a repository from another\nhosting service, for example GitHub or BitBucket.",
      "properties": {
        "deployKeyId": {"description": "ID of the SSH deploy key at the other hosting service.\nRemoving this key from the other service would deauthorize\nGoogle Cloud Source Repositories from mirroring.", "type": "string"},
        "url": {"description": "URL of the main repository at the other hosting service.", "type": "string"},
        "webhookId": {
          "description": "ID of the webhook listening to updates to trigger mirroring.\nRemoving this webook from the other hosting service will stop\nGoogle Cloud Source Repositories from receiving notifications,\nand thereby disabling mirroring.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Policy": {
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\",\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam).",
      "properties": {
        "auditConfigs": {"description": "Specifies cloud audit logging configuration for this policy.", "items": {"$ref": "#/definitions/AuditConfig"}, "type": "array"},
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\nMultiple `bindings` must not be specified for the same `role`.\n`bindings` with no members will result in an error.",
          "items": {"$ref": "#/definitions/Binding"},
          "type": "array"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "iamOwned": {"type": "boolean"},
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "items": {"$ref": "#/definitions/Rule"},
          "type": "array"
        },
        "version": {"description": "Version of the `Policy`. The default version is 0.", "format": "int32", "type": "integer"}
      },
      "type": "object"
    },
    "Repo": {
      "description": "A repository (or repo) is a Git repository storing versioned source content.",
      "properties": {
        "mirrorConfig": {"$ref": "#/definitions/MirrorConfig", "description": "How this repository mirrors a repository managed by another service."},
        "name": {"description": "Resource name of the repository, of the form\n`projects/<project>/repos/<repo>`.  The repo name may contain slashes.\neg, `projects/myproject/repos/name/with/slash`", "type": "string"},
        "size": {"description": "The disk usage of the repo, in bytes.\nOnly returned by GetRepo.", "format": "int64", "type": "string"},
        "url": {"description": "URL to clone the repository from Google Cloud Source Repositories.", "type": "string"}
      },
      "type": "object"
    },
    "Rule": {
      "description": "A rule to be applied in a Policy.",
      "properties": {
        "action": {"description": "Required", "enum": ["NO_ACTION", "ALLOW", "ALLOW_WITH_LOG", "DENY", "DENY_WITH_LOG", "LOG"], "type": "string"},
        "conditions": {"description": "Additional restrictions that must be met", "items": {"$ref": "#/definitions/Condition"}, "type": "array"},
        "description": {"description": "Human-readable description of the rule.", "type": "string"},
        "in": {"description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.", "items": {"type": "string"}, "type": "array"},
        "logConfig": {"description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.", "items": {"$ref": "#/definitions/LogConfig"}, "type": "array"},
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries is the same as for members in a\nBinding (see google/iam/v1/policy.proto).",
          "items": {"type": "string"},
          "type": "array"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "items": {"type": "string"},
          "type": "array"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "#/definitions/Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {"type": "string"},
          "type": "array"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {"permissions": {"description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", "items": {"type": "string"}, "type": "array"}},
      "type": "object"
    }
  }
}
