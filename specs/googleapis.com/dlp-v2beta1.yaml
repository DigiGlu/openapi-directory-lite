swagger: '2.0'
schemes:
  - https
host: dlp.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'The Google Data Loss Prevention API provides methods for detection of privacy-sensitive fragments in text, images, and Google Cloud Platform storage repositories.'
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: DLP
  version: v2beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.0.1
      format: google
      url: 'https://dlp.googleapis.com/$discovery/rest?version=v2beta1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: dlp
externalDocs:
  url: 'https://cloud.google.com/dlp/docs/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 accessCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: content
  - name: inspect
  - name: riskAnalysis
  - name: rootCategories
paths:
  '/v2beta1/content:inspect':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Finds potentially sensitive info in a list of strings.
        This method has limits on input size, processing time, and output size.
      operationId: dlp.content.inspect
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectContentRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectContentResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - content
  '/v2beta1/content:redact':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Redacts potentially sensitive info from a list of strings.
        This method has limits on input size, processing time, and output size.
      operationId: dlp.content.redact
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1RedactContentRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1RedactContentResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - content
  /v2beta1/inspect/operations:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Schedules a job scanning content in a Google Cloud Platform data
        repository.
      operationId: dlp.inspect.operations.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1CreateInspectOperationRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningOperation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - inspect
  /v2beta1/rootCategories:
    get:
      description: Returns the list of root categories of sensitive information.
      operationId: dlp.rootCategories.list
      parameters:
        - description: |-
            Optional language code for localized friendly category names.
            If omitted or if localized strings are not available,
            en-US strings will be returned.
          in: query
          name: languageCode
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1ListRootCategoriesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - rootCategories
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v2beta1/rootCategories/{category}/infoTypes':
    get:
      description: Returns sensitive information types for given category.
      operationId: dlp.rootCategories.infoTypes.list
      parameters:
        - description: Category name as returned by ListRootCategories.
          in: path
          name: category
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Optional BCP-47 language code for localized info type friendly
            names. If omitted, or if localized strings are not available,
            en-US strings will be returned.
          in: query
          name: languageCode
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1ListInfoTypesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - rootCategories
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v2beta1/{name}':
    delete:
      description: This method is not supported and the server returns `UNIMPLEMENTED`.
      operationId: dlp.riskAnalysis.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleProtobufEmpty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - riskAnalysis
    get:
      description: |-
        Gets the latest state of a long-running operation.  Clients can use this
        method to poll the operation result at intervals as recommended by the API
        service.
      operationId: dlp.riskAnalysis.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningOperation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - riskAnalysis
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v2beta1/{name}/findings':
    get:
      description: Returns list of results for given inspect operation result set id.
      operationId: dlp.inspect.results.findings.list
      parameters:
        - description: |-
            Restricts findings to items that match. Supports info_type and likelihood.
            <p>Examples:<br/>
            <li>info_type=EMAIL_ADDRESS
            <li>info_type=PHONE_NUMBER,EMAIL_ADDRESS
            <li>likelihood=VERY_LIKELY
            <li>likelihood=VERY_LIKELY,LIKELY
            <li>info_type=EMAIL_ADDRESS,likelihood=VERY_LIKELY,LIKELY
          in: query
          name: filter
          type: string
        - description: |-
            Identifier of the results set returned as metadata of
            the longrunning operation created by a call to CreateInspectOperation.
            Should be in the format of `inspect/results/{id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Maximum number of results to return.
            If 0, the implementation selects a reasonable value.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The value returned by the last `ListInspectFindingsResponse`; indicates
            that this is a continuation of a prior `ListInspectFindings` call, and that
            the system should return the next page of data.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GooglePrivacyDlpV2beta1ListInspectFindingsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - inspect
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v2beta1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Cancels an operation. Use the get method to check whether the cancellation succeeded or whether the operation completed despite cancellation.
      operationId: dlp.riskAnalysis.operations.cancel
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleLongrunningCancelOperationRequest'
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleProtobufEmpty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - riskAnalysis
definitions:
  GoogleLongrunningCancelOperationRequest:
    description: The request message for Operations.CancelOperation.
    properties: {}
    type: object
  GoogleLongrunningListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/GoogleLongrunningOperation'
        type: array
    type: object
  GoogleLongrunningOperation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/GoogleRpcStatus'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: This field will contain an InspectOperationMetadata object. This will always be returned with the Operation.
        type: object
      name:
        description: 'The server-assigned name, The `name` should have the format of `inspect/operations/<identifier>`.'
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: This field will contain an InspectOperationResult object.
        type: object
    type: object
  GooglePrivacyDlpV2beta1BigQueryOptions:
    description: Options defining BigQuery table and row identifiers.
    properties:
      identifyingFields:
        description: |-
          References to fields uniquely identifying rows within the table.
          Nested fields in the format, like `person.birthdate.year`, are allowed.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1FieldId'
        type: array
      tableReference:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1BigQueryTable'
        description: Complete BigQuery table reference.
    type: object
  GooglePrivacyDlpV2beta1BigQueryTable:
    description: |-
      Message defining the location of a BigQuery table. A table is uniquely
      identified  by its project_id, dataset_id, and table_name. Within a query
      a table is often referenced with a string in the format of:
      `<project_id>:<dataset_id>.<table_id>` or
      `<project_id>.<dataset_id>.<table_id>`.
    properties:
      datasetId:
        description: Dataset ID of the table.
        type: string
      projectId:
        description: |-
          The Google Cloud Platform project ID of the project containing the table.
          If omitted, project ID is inferred from the API call.
        type: string
      tableId:
        description: Name of the table.
        type: string
    type: object
  GooglePrivacyDlpV2beta1CategoryDescription:
    description: Info Type Category description.
    properties:
      displayName:
        description: Human readable form of the category name.
        type: string
      name:
        description: Internal name of the category.
        type: string
    type: object
  GooglePrivacyDlpV2beta1CloudStorageKey:
    description: Record key for a finding in a Cloud Storage file.
    properties:
      filePath:
        description: Path to the file.
        type: string
      startOffset:
        description: Byte offset of the referenced data in the file.
        format: int64
        type: string
    type: object
  GooglePrivacyDlpV2beta1CloudStorageOptions:
    description: |-
      Options defining a file or a set of files (path ending with *) within
      a Google Cloud Storage bucket.
    properties:
      fileSet:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1FileSet'
    type: object
  GooglePrivacyDlpV2beta1CloudStoragePath:
    description: A location in Cloud Storage.
    properties:
      path:
        description: 'The url, in the format of `gs://bucket/<path>`.'
        type: string
    type: object
  GooglePrivacyDlpV2beta1Color:
    description: Represents a color in the RGB color space.
    properties:
      blue:
        description: 'The amount of blue in the color as a value in the interval [0, 1].'
        format: float
        type: number
      green:
        description: 'The amount of green in the color as a value in the interval [0, 1].'
        format: float
        type: number
      red:
        description: 'The amount of red in the color as a value in the interval [0, 1].'
        format: float
        type: number
    type: object
  GooglePrivacyDlpV2beta1ContentItem:
    description: Container structure for the content to inspect.
    properties:
      data:
        description: Content data to inspect or redact.
        format: byte
        type: string
      table:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1Table'
        description: Structured content for inspection.
      type:
        description: |-
          Type of the content, as defined in Content-Type HTTP header.
          Supported types are: all "text" types, octet streams, PNG images,
          JPEG images.
        type: string
      value:
        description: String data to inspect or redact.
        type: string
    type: object
  GooglePrivacyDlpV2beta1CreateInspectOperationRequest:
    description: |-
      Request for scheduling a scan of a data subset from a Google Platform data
      repository.
    properties:
      inspectConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectConfig'
        description: Configuration for the inspector.
      operationConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1OperationConfig'
        description: Additional configuration settings for long running operations.
      outputConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1OutputStorageConfig'
        description: |-
          Optional location to store findings. The bucket must already exist and
          the Google APIs service account for DLP must have write permission to
          write to the given bucket.
          <p>Results are split over multiple csv files with each file name matching
          the pattern "[operation_id]_[count].csv", for example
          `3094877188788974909_1.csv`. The `operation_id` matches the
          identifier for the Operation, and the `count` is a counter used for
          tracking the number of files written. <p>The CSV file(s) contain the
          following columns regardless of storage type scanned: <li>id <li>info_type
          <li>likelihood <li>byte size of finding <li>quote <li>timestamp<br/>
          <p>For Cloud Storage the next columns are: <li>file_path
          <li>start_offset<br/>
          <p>For Cloud Datastore the next columns are: <li>project_id
          <li>namespace_id <li>path <li>column_name <li>offset<br/>
          <p>For BigQuery the next columns are: <li>row_number <li>project_id
          <li>dataset_id <li>table_id
      storageConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1StorageConfig'
        description: Specification of the data set to process.
    type: object
  GooglePrivacyDlpV2beta1DatastoreKey:
    description: Record key for a finding in Cloud Datastore.
    properties:
      entityKey:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1Key'
        description: Datastore entity key.
    type: object
  GooglePrivacyDlpV2beta1DatastoreOptions:
    description: Options defining a data set within Google Cloud Datastore.
    properties:
      kind:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1KindExpression'
        description: The kind to process.
      partitionId:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1PartitionId'
        description: |-
          A partition ID identifies a grouping of entities. The grouping is always
          by project and namespace, however the namespace ID may be empty.
      projection:
        description: |-
          Properties to scan. If none are specified, all properties will be scanned
          by default.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1Projection'
        type: array
    type: object
  GooglePrivacyDlpV2beta1FieldId:
    description: General identifier of a data field in a storage service.
    properties:
      columnName:
        description: Name describing the field.
        type: string
    type: object
  GooglePrivacyDlpV2beta1FileSet:
    description: Set of files to scan.
    properties:
      url:
        description: |-
          The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in the
          path is allowed.
        type: string
    type: object
  GooglePrivacyDlpV2beta1Finding:
    description: Container structure describing a single finding within a string or image.
    properties:
      createTime:
        description: Timestamp when finding was detected.
        format: google-datetime
        type: string
      infoType:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoType'
        description: The specific type of info the string might be.
      likelihood:
        description: Estimate of how likely it is that the info_type is correct.
        enum:
          - LIKELIHOOD_UNSPECIFIED
          - VERY_UNLIKELY
          - UNLIKELY
          - POSSIBLE
          - LIKELY
          - VERY_LIKELY
        type: string
      location:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1Location'
        description: Location of the info found.
      quote:
        description: The specific string that may be potentially sensitive info.
        type: string
    type: object
  GooglePrivacyDlpV2beta1ImageLocation:
    description: Bounding box encompassing detected text within an image.
    properties:
      height:
        description: Height of the bounding box in pixels.
        format: int32
        type: integer
      left:
        description: 'Left coordinate of the bounding box. (0,0) is upper left.'
        format: int32
        type: integer
      top:
        description: 'Top coordinate of the bounding box. (0,0) is upper left.'
        format: int32
        type: integer
      width:
        description: Width of the bounding box in pixels.
        format: int32
        type: integer
    type: object
  GooglePrivacyDlpV2beta1ImageRedactionConfig:
    description: Configuration for determing how redaction of images should occur.
    properties:
      infoType:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoType'
        description: |-
          Only one per info_type should be provided per request. If not
          specified, and redact_all_text is false, the DLP API will redact all
          text that it matches against all info_types that are found, but not
          specified in another ImageRedactionConfig.
      redactAllText:
        description: |-
          If true, all text found in the image, regardless whether it matches an
          info_type, is redacted.
        type: boolean
      redactionColor:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1Color'
        description: |-
          The color to use when redacting content from an image. If not specified,
          the default is black.
    type: object
  GooglePrivacyDlpV2beta1InfoType:
    description: Type of information detected by the API.
    properties:
      name:
        description: Name of the information type.
        type: string
    type: object
  GooglePrivacyDlpV2beta1InfoTypeDescription:
    description: Info type description.
    properties:
      categories:
        description: List of categories this info type belongs to.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1CategoryDescription'
        type: array
      displayName:
        description: Human readable form of the info type name.
        type: string
      name:
        description: Internal name of the info type.
        type: string
    type: object
  GooglePrivacyDlpV2beta1InfoTypeLimit:
    description: |-
      Max findings configuration per info type, per content item or long running
      operation.
    properties:
      infoType:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoType'
        description: |-
          Type of information the findings limit applies to. Only one limit per
          info_type should be provided. If InfoTypeLimit does not have an
          info_type, the DLP API applies the limit against all info_types that are
          found but not specified in another InfoTypeLimit.
      maxFindings:
        description: Max findings limit for the given infoType.
        format: int32
        type: integer
    type: object
  GooglePrivacyDlpV2beta1InfoTypeStatistics:
    description: Statistics regarding a specific InfoType.
    properties:
      count:
        description: Number of findings for this info type.
        format: int64
        type: string
      infoType:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoType'
        description: The type of finding this stat is for.
    type: object
  GooglePrivacyDlpV2beta1InspectConfig:
    description: |-
      Configuration description of the scanning process.
      When used with redactContent only info_types and min_likelihood are currently
      used.
    properties:
      excludeTypes:
        description: 'When true, excludes type information of the findings.'
        type: boolean
      includeQuote:
        description: |-
          When true, a contextual quote from the data that triggered a finding is
          included in the response; see Finding.quote.
        type: boolean
      infoTypeLimits:
        description: Configuration of findings limit given for specified info types.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoTypeLimit'
        type: array
      infoTypes:
        description: |-
          Restricts what info_types to look for. The values must correspond to
          InfoType values returned by ListInfoTypes or found in documentation.
          Empty info_types runs all enabled detectors.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoType'
        type: array
      maxFindings:
        description: Limits the number of findings per content item or long running operation.
        format: int32
        type: integer
      minLikelihood:
        description: Only returns findings equal or above this threshold.
        enum:
          - LIKELIHOOD_UNSPECIFIED
          - VERY_UNLIKELY
          - UNLIKELY
          - POSSIBLE
          - LIKELY
          - VERY_LIKELY
        type: string
    type: object
  GooglePrivacyDlpV2beta1InspectContentRequest:
    description: Request to search for potentially sensitive info in a list of items.
    properties:
      inspectConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectConfig'
        description: Configuration for the inspector.
      items:
        description: |-
          The list of items to inspect. Items in a single request are
          considered "related" unless inspect_config.independent_inputs is true.
          Up to 100 are allowed per request.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1ContentItem'
        type: array
    type: object
  GooglePrivacyDlpV2beta1InspectContentResponse:
    description: Results of inspecting a list of items.
    properties:
      results:
        description: |-
          Each content_item from the request has a result in this list, in the
          same order as the request.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectResult'
        type: array
    type: object
  GooglePrivacyDlpV2beta1InspectOperationMetadata:
    description: Metadata returned within GetOperation for an inspect request.
    properties:
      createTime:
        description: The time which this request was started.
        format: google-datetime
        type: string
      infoTypeStats:
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoTypeStatistics'
        type: array
      processedBytes:
        description: Total size in bytes that were processed.
        format: int64
        type: string
      requestInspectConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectConfig'
        description: The inspect config used to create the Operation.
      requestOutputConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1OutputStorageConfig'
        description: Optional location to store findings.
      requestStorageConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1StorageConfig'
        description: The storage config used to create the Operation.
      totalEstimatedBytes:
        description: Estimate of the number of bytes to process.
        format: int64
        type: string
    type: object
  GooglePrivacyDlpV2beta1InspectOperationResult:
    description: The operational data.
    properties:
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `inspect/results/{id}`.
        type: string
    type: object
  GooglePrivacyDlpV2beta1InspectResult:
    description: All the findings for a single scanned item.
    properties:
      findings:
        description: List of findings for an item.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1Finding'
        type: array
      findingsTruncated:
        description: |-
          If true, then this item might have more findings than were returned,
          and the findings returned are an arbitrary subset of all findings.
          The findings list might be truncated because the input items were too
          large, or because the server reached the maximum amount of resources
          allowed for a single API call. For best results, divide the input into
          smaller batches.
        type: boolean
    type: object
  GooglePrivacyDlpV2beta1Key:
    description: |-
      A unique identifier for a Datastore entity.
      If a key's partition ID or any of its path kinds or names are
      reserved/read-only, the key is reserved/read-only.
      A reserved/read-only key is forbidden in certain documented contexts.
    properties:
      partitionId:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1PartitionId'
        description: |-
          Entities are partitioned into subsets, currently identified by a project
          ID and namespace ID.
          Queries are scoped to a single partition.
      path:
        description: |-
          The entity path.
          An entity path consists of one or more elements composed of a kind and a
          string or numerical identifier, which identify entities. The first
          element identifies a _root entity_, the second element identifies
          a _child_ of the root entity, the third element identifies a child of the
          second entity, and so forth. The entities identified by all prefixes of
          the path are called the element's _ancestors_.

          A path can never be empty, and a path can have at most 100 elements.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1PathElement'
        type: array
    type: object
  GooglePrivacyDlpV2beta1KindExpression:
    description: A representation of a Datastore kind.
    properties:
      name:
        description: The name of the kind.
        type: string
    type: object
  GooglePrivacyDlpV2beta1ListInfoTypesResponse:
    description: Response to the ListInfoTypes request.
    properties:
      infoTypes:
        description: Set of sensitive info types belonging to a category.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoTypeDescription'
        type: array
    type: object
  GooglePrivacyDlpV2beta1ListInspectFindingsResponse:
    description: Response to the ListInspectFindings request.
    properties:
      nextPageToken:
        description: |-
          If not empty, indicates that there may be more results that match the
          request; this value should be passed in a new `ListInspectFindingsRequest`.
        type: string
      result:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectResult'
        description: The results.
    type: object
  GooglePrivacyDlpV2beta1ListRootCategoriesResponse:
    description: Response for ListRootCategories request.
    properties:
      categories:
        description: List of all into type categories supported by the API.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1CategoryDescription'
        type: array
    type: object
  GooglePrivacyDlpV2beta1Location:
    description: Specifies the location of a finding within its source item.
    properties:
      byteRange:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1Range'
        description: Zero-based byte offsets within a content item.
      codepointRange:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1Range'
        description: |-
          Character offsets within a content item, included when content type
          is a text. Default charset assumed to be UTF-8.
      fieldId:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1FieldId'
        description: Field id of the field containing the finding.
      imageBoxes:
        description: Location within an image's pixels.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1ImageLocation'
        type: array
      recordKey:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1RecordKey'
        description: Key of the finding.
      tableLocation:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1TableLocation'
        description: Location within a `ContentItem.Table`.
    type: object
  GooglePrivacyDlpV2beta1OperationConfig:
    description: Additional configuration for inspect long running operations.
    properties:
      maxItemFindings:
        description: 'Max number of findings per file, Datastore entity, or database row.'
        format: int64
        type: string
    type: object
  GooglePrivacyDlpV2beta1OutputStorageConfig:
    description: Cloud repository for storing output.
    properties:
      storagePath:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1CloudStoragePath'
        description: The path to a Google Cloud Storage location to store output.
      table:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1BigQueryTable'
        description: Store findings in a new table in the dataset.
    type: object
  GooglePrivacyDlpV2beta1PartitionId:
    description: |-
      Datastore partition ID.
      A partition ID identifies a grouping of entities. The grouping is always
      by project and namespace, however the namespace ID may be empty.

      A partition ID contains several dimensions:
      project ID and namespace ID.
    properties:
      namespaceId:
        description: 'If not empty, the ID of the namespace to which the entities belong.'
        type: string
      projectId:
        description: The ID of the project to which the entities belong.
        type: string
    type: object
  GooglePrivacyDlpV2beta1PathElement:
    description: |-
      A (kind, ID/name) pair used to construct a key path.

      If either name or ID is set, the element is complete.
      If neither is set, the element is incomplete.
    properties:
      id:
        description: |-
          The auto-allocated ID of the entity.
          Never equal to zero. Values less than zero are discouraged and may not
          be supported in the future.
        format: int64
        type: string
      kind:
        description: |-
          The kind of the entity.
          A kind matching regex `__.*__` is reserved/read-only.
          A kind must not contain more than 1500 bytes when UTF-8 encoded.
          Cannot be `""`.
        type: string
      name:
        description: |-
          The name of the entity.
          A name matching regex `__.*__` is reserved/read-only.
          A name must not be more than 1500 bytes when UTF-8 encoded.
          Cannot be `""`.
        type: string
    type: object
  GooglePrivacyDlpV2beta1Projection:
    description: A representation of a Datastore property in a projection.
    properties:
      property:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1PropertyReference'
        description: The property to project.
    type: object
  GooglePrivacyDlpV2beta1PropertyReference:
    description: A reference to a property relative to the Datastore kind expressions.
    properties:
      name:
        description: |-
          The name of the property.
          If name includes "."s, it may be interpreted as a property name path.
        type: string
    type: object
  GooglePrivacyDlpV2beta1Range:
    description: 'Generic half-open interval [start, end)'
    properties:
      end:
        description: Index of the last character of the range (exclusive).
        format: int64
        type: string
      start:
        description: Index of the first character of the range (inclusive).
        format: int64
        type: string
    type: object
  GooglePrivacyDlpV2beta1RecordKey:
    description: Message for a unique key indicating a record that contains a finding.
    properties:
      cloudStorageKey:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1CloudStorageKey'
      datastoreKey:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1DatastoreKey'
    type: object
  GooglePrivacyDlpV2beta1RedactContentRequest:
    description: |-
      Request to search for potentially sensitive info in a list of items
      and replace it with a default or provided content.
    properties:
      imageRedactionConfigs:
        description: The configuration for specifying what content to redact from images.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1ImageRedactionConfig'
        type: array
      inspectConfig:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InspectConfig'
        description: Configuration for the inspector.
      items:
        description: The list of items to inspect. Up to 100 are allowed per request.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1ContentItem'
        type: array
      replaceConfigs:
        description: |-
          The strings to replace findings text findings with. Must specify at least
          one of these or one ImageRedactionConfig if redacting images.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1ReplaceConfig'
        type: array
    type: object
  GooglePrivacyDlpV2beta1RedactContentResponse:
    description: Results of redacting a list of items.
    properties:
      items:
        description: The redacted content.
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1ContentItem'
        type: array
    type: object
  GooglePrivacyDlpV2beta1ReplaceConfig:
    properties:
      infoType:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1InfoType'
        description: |-
          Type of information to replace. Only one ReplaceConfig per info_type
          should be provided. If ReplaceConfig does not have an info_type, the DLP
          API matches it against all info_types that are found but not specified in
          another ReplaceConfig.
      replaceWith:
        description: Content replacing sensitive information of given type. Max 256 chars.
        type: string
    type: object
  GooglePrivacyDlpV2beta1Row:
    properties:
      values:
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1Value'
        type: array
    type: object
  GooglePrivacyDlpV2beta1StorageConfig:
    description: Shared message indicating Cloud storage type.
    properties:
      bigQueryOptions:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1BigQueryOptions'
        description: BigQuery options specification.
      cloudStorageOptions:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1CloudStorageOptions'
        description: Google Cloud Storage options specification.
      datastoreOptions:
        $ref: '#/definitions/GooglePrivacyDlpV2beta1DatastoreOptions'
        description: Google Cloud Datastore options specification.
    type: object
  GooglePrivacyDlpV2beta1Table:
    description: 'Structured content to inspect. Up to 50,000 `Value`s per request allowed.'
    properties:
      headers:
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1FieldId'
        type: array
      rows:
        items:
          $ref: '#/definitions/GooglePrivacyDlpV2beta1Row'
        type: array
    type: object
  GooglePrivacyDlpV2beta1TableLocation:
    description: Location of a finding within a `ContentItem.Table`.
    properties:
      rowIndex:
        description: The zero-based index of the row where the finding is located.
        format: int64
        type: string
    type: object
  GooglePrivacyDlpV2beta1Value:
    description: Set of primitive values supported by the system.
    properties:
      booleanValue:
        type: boolean
      dateValue:
        $ref: '#/definitions/GoogleTypeDate'
      floatValue:
        format: double
        type: number
      integerValue:
        format: int64
        type: string
      stringValue:
        type: string
      timeValue:
        $ref: '#/definitions/GoogleTypeTimeOfDay'
      timestampValue:
        format: google-datetime
        type: string
    type: object
  GoogleProtobufEmpty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  GoogleRpcStatus:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  GoogleTypeDate:
    description: |-
      Represents a whole calendar date, e.g. date of birth. The time of day and
      time zone are either specified elsewhere or are not significant. The date
      is relative to the Proleptic Gregorian Calendar. The day may be 0 to
      represent a year and month where the day is not significant, e.g. credit card
      expiration date. The year may be 0 to represent a month and day independent
      of year, e.g. anniversary date. Related types are google.type.TimeOfDay
      and `google.protobuf.Timestamp`.
    properties:
      day:
        description: |-
          Day of month. Must be from 1 to 31 and valid for the year and month, or 0
          if specifying a year/month where the day is not significant.
        format: int32
        type: integer
      month:
        description: Month of year. Must be from 1 to 12.
        format: int32
        type: integer
      year:
        description: |-
          Year of date. Must be from 1 to 9999, or 0 if specifying a date without
          a year.
        format: int32
        type: integer
    type: object
  GoogleTypeTimeOfDay:
    description: |-
      Represents a time of day. The date and time zone are either not significant
      or are specified elsewhere. An API may choose to allow leap seconds. Related
      types are google.type.Date and `google.protobuf.Timestamp`.
    properties:
      hours:
        description: |-
          Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
          to allow the value "24:00:00" for scenarios like business closing time.
        format: int32
        type: integer
      minutes:
        description: Minutes of hour of day. Must be from 0 to 59.
        format: int32
        type: integer
      nanos:
        description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
        format: int32
        type: integer
      seconds:
        description: |-
          Seconds of minutes of the time. Must normally be from 0 to 59. An API may
          allow the value 60 if it allows leap-seconds.
        format: int32
        type: integer
    type: object
